# This is a registers generator code for Vis-emulator.py
# Prepare the T6 and T7 regoisters to generate generic text and write sentences. 
# Copy emulator registers into clipboard, to write 99 bottles of beer etc. 
# Michael Simkin 2019 

import golly as g 

let2cells =	{' ': ([], 5), '$': ([3, 0, 4, 2, 1, 4, 3, 1, 4, 4, 1, 4, 1, 2, 4, 3, 2, 4, 5, 2, 4, 1, 3, 4, 3, 3, 4, 2, 4, 4, 3, 4, 4, 4, 4, 4, 3, 5, 4, 5, 5, 4, 1, 6, 4, 3, 6, 4, 5, 6, 4, 2, 7, 4, 3, 7, 4, 4, 7, 4, 3, 8, 4], 7), '(': ([2, 2, 4, 1, 3, 4, 1, 4, 4, 1, 5, 4, 1, 6, 4, 1, 7, 4, 2, 8, 4], 4), ',': ([2, 8, 4, 2, 9, 4, 1, 10, 4], 4), '0': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 4, 4, 4, 5, 4, 4, 1, 5, 4, 3, 5, 4, 5, 5, 4, 1, 6, 4, 2, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4], 7), '4': ([4, 2, 4, 3, 3, 4, 4, 3, 4, 2, 4, 4, 4, 4, 4, 1, 5, 4, 4, 5, 4, 1, 6, 4, 2, 6, 4, 3, 6, 4, 4, 6, 4, 5, 6, 4, 4, 7, 4, 4, 8, 4, 0], 7), '8': ([3, 2, 4, 4, 2, 4, 5, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 6, 4, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), '<': ([4, 3, 4, 3, 4, 4, 2, 5, 4, 3, 6, 4, 4, 7, 4], 5), '@': ([2, 1, 4, 3, 1, 4, 4, 1, 4, 1, 2, 4, 5, 2, 4, 1, 3, 4, 4, 3, 4, 5, 3, 4, 1, 4, 4, 3, 4, 4, 5, 4, 4, 1, 5, 4, 3, 5, 4, 5, 5, 4, 1, 6, 4, 4, 6, 4, 5, 6, 4, 1, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 0], 7), 'D': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 0], 7), 'H': ([1, 2, 4, 5, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 5, 4, 4, 1, 5, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 1, 8, 4, 5, 8, 4], 7), 'L': ([2, 2, 4, 2, 3, 4, 2, 4, 4, 2, 5, 4, 2, 6, 4, 2, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 6, 8, 4], 7), 'P': ([1, 2, 4, 2, 2, 4, 3, 2, 4, 4, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 5, 4, 4, 1, 5, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 1, 6, 4, 1, 7, 4, 1, 8, 4], 7), 'T': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 6, 2, 4, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 6, 4, 4, 7, 4, 4, 8, 4], 7), 'X': ([2, 2, 4, 6, 2, 4, 2, 3, 4, 6, 3, 4, 3, 4, 4, 5, 4, 4, 4, 5, 4, 3, 6, 4, 5, 6, 4, 2, 7, 4, 6, 7, 4, 2, 8, 4, 6, 8, 4], 7), '\\': ([1, 2, 4, 2, 3, 4, 2, 4, 4, 3, 5, 4, 4, 6, 4, 4, 7, 4, 5, 8, 4], 7), 'd': ([6, 1, 4, 6, 2, 4, 6, 3, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 6, 8, 4], 7), 'h': ([1, 1, 4, 1, 2, 4, 1, 3, 4, 1, 4, 4, 2, 4, 4, 3, 4, 4, 4, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 1, 8, 4, 5, 8, 4], 7), 'l': ([2, 1, 4, 3, 1, 4, 3, 2, 4, 3, 3, 4, 3, 4, 4, 3, 5, 4, 3, 6, 4, 3, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4], 5), 'p': ([2, 4, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 2, 9, 4, 2, 10, 4, 2, 11, 4], 7), 't': ([2, 1, 4, 2, 2, 4, 1, 3, 4, 2, 3, 4, 3, 3, 4, 2, 4, 4, 2, 5, 4, 2, 6, 4, 2, 7, 4, 3, 8, 4, 4, 8, 4], 6), 'x': ([1, 4, 4, 5, 4, 4, 2, 5, 4, 4, 5, 4, 3, 6, 4, 2, 7, 4, 4, 7, 4, 1, 8, 4, 5, 8, 4], 7), '|': ([1, 2, 4, 1, 3, 4, 1, 4, 4, 1, 5, 4, 1, 6, 4, 1, 7, 4, 1, 8, 4], 3), '#': ([3, 1, 4, 6, 1, 4, 3, 2, 4, 6, 2, 4, 2, 3, 4, 3, 3, 4, 4, 3, 4, 5, 3, 4, 6, 3, 4, 7, 3, 4, 3, 4, 4, 6, 4, 4, 3, 5, 4, 6, 5, 4, 2, 6, 4, 3, 6, 4, 4, 6, 4, 5, 6, 4, 6, 6, 4, 7, 6, 4, 3, 7, 4, 6, 7, 4, 3, 8, 4, 6, 8, 4, 0], 8), "'": ([1, 1, 4, 1, 2, 4, 0], 3), '+': ([3, 3, 4, 3, 4, 4, 1, 5, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 3, 6, 4, 3, 7, 4], 7), '/': ([6, 2, 4, 5, 3, 4, 5, 4, 4, 4, 5, 4, 3, 6, 4, 3, 7, 4, 2, 8, 4], 7), '3': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 1, 3, 4, 5, 3, 4, 5, 4, 4, 3, 5, 4, 4, 5, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 0], 7), '7': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 6, 2, 4, 6, 3, 4, 6, 4, 4, 5, 5, 4, 4, 6, 4, 4, 7, 4, 4, 8, 4], 7), ';': ([3, 3, 4, 3, 6, 4, 3, 7, 4, 2, 8, 4, 0], 4), '?': ([3, 2, 4, 4, 2, 4, 2, 3, 4, 5, 3, 4, 5, 4, 4, 4, 5, 4, 3, 6, 4, 3, 8, 4, 0], 6), 'C': ([3, 2, 4, 4, 2, 4, 5, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 2, 5, 4, 2, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), 'G': ([3, 2, 4, 4, 2, 4, 5, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 2, 5, 4, 4, 5, 4, 5, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), 'K': ([2, 2, 4, 6, 2, 4, 2, 3, 4, 5, 3, 4, 2, 4, 4, 4, 4, 4, 2, 5, 4, 3, 5, 4, 2, 6, 4, 4, 6, 4, 2, 7, 4, 5, 7, 4, 2, 8, 4, 6, 8, 4, 0], 7), 'O': ([3, 2, 4, 4, 2, 4, 5, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 0], 7), 'S': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4], 7), 'W': ([1, 2, 4, 5, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 5, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 3, 6, 4, 5, 6, 4, 1, 7, 4, 2, 7, 4, 4, 7, 4, 5, 7, 4, 1, 8, 4, 5, 8, 4], 7), '[': ([1, 2, 4, 2, 2, 4, 1, 3, 4, 1, 4, 4, 1, 5, 4, 1, 6, 4, 1, 7, 4, 1, 8, 4, 2, 8, 4], 4), '_': ([1, 8, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 0], 6), 'c': ([3, 4, 4, 4, 4, 4, 5, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 2, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 6, 8, 4], 7), 'g': ([3, 4, 4, 4, 4, 4, 5, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 6, 8, 4, 6, 9, 4, 6, 10, 4, 3, 11, 4, 4, 11, 4, 5, 11, 4], 7), 'k': ([1, 1, 4, 1, 2, 4, 1, 3, 4, 4, 3, 4, 1, 4, 4, 3, 4, 4, 1, 5, 4, 2, 5, 4, 1, 6, 4, 2, 6, 4, 3, 6, 4, 1, 7, 4, 4, 7, 4, 1, 8, 4, 5, 8, 4], 7), 'o': ([2, 4, 4, 3, 4, 4, 4, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 0], 7), 's': ([3, 4, 4, 4, 4, 4, 5, 4, 4, 6, 4, 4, 2, 5, 4, 3, 6, 4, 4, 6, 4, 5, 6, 4, 6, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), 'w': ([2, 4, 4, 4, 4, 4, 6, 4, 4, 2, 5, 4, 4, 5, 4, 6, 5, 4, 2, 6, 4, 4, 6, 4, 6, 6, 4, 2, 7, 4, 4, 7, 4, 6, 7, 4, 3, 8, 4, 5, 8, 4, 0], 7), '{': ([3, 2, 4, 2, 3, 4, 2, 4, 4, 1, 5, 4, 2, 6, 4, 2, 7, 4, 3, 8, 4], 5), '"': ([1, 1, 4, 3, 1, 4, 1, 2, 4, 3, 2, 4, 0], 4), '&': ([4, 1, 4, 5, 1, 4, 3, 2, 4, 6, 2, 4, 3, 3, 4, 6, 3, 4, 3, 4, 4, 5, 4, 4, 2, 5, 4, 4, 5, 4, 7, 5, 4, 2, 6, 4, 5, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 7, 8, 4, 0], 8), '*': ([3, 3, 4, 5, 3, 4, 4, 4, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 6, 5, 4, 4, 6, 4, 3, 7, 4, 5, 7, 4], 7), '.': ([2, 8, 4], 3), '2': ([3, 2, 4, 4, 2, 4, 2, 3, 4, 5, 3, 4, 5, 4, 4, 4, 5, 4, 3, 6, 4, 2, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 0], 6), '6': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 1, 3, 4, 1, 4, 4, 1, 5, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 0], 7), ':': ([2, 3, 4, 2, 6, 4, 0], 3), '>': ([1, 3, 4, 2, 4, 4, 3, 5, 4, 2, 6, 4, 1, 7, 4], 5), 'B': ([1, 2, 4, 2, 2, 4, 3, 2, 4, 4, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 5, 4, 4, 1, 5, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 1, 8, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 0], 7), 'F': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 6, 2, 4, 2, 3, 4, 2, 4, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 2, 6, 4, 2, 7, 4, 2, 8, 4, 0], 7), 'J': ([5, 2, 4, 6, 2, 4, 7, 2, 4, 6, 3, 4, 6, 4, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 8), 'N': ([1, 2, 4, 5, 2, 4, 1, 3, 4, 2, 3, 4, 5, 3, 4, 1, 4, 4, 3, 4, 4, 5, 4, 4, 1, 5, 4, 4, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 1, 8, 4, 5, 8, 4], 7), 'R': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 6, 4, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 2, 8, 4, 6, 8, 4, 0], 7), 'V': ([1, 2, 4, 5, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 5, 4, 4, 2, 5, 4, 4, 5, 4, 2, 6, 4, 4, 6, 4, 3, 7, 4, 3, 8, 4, 0], 7), 'Z': ([1, 2, 4, 2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 5, 3, 4, 4, 4, 4, 3, 5, 4, 2, 6, 4, 1, 7, 4, 1, 8, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), 'b': ([1, 1, 4, 1, 2, 4, 1, 3, 4, 1, 4, 4, 2, 4, 4, 3, 4, 4, 4, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 1, 8, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4], 7), 'f': ([4, 1, 4, 5, 1, 4, 3, 2, 4, 3, 3, 4, 2, 4, 4, 3, 4, 4, 4, 4, 4, 3, 5, 4, 3, 6, 4, 3, 7, 4, 3, 8, 4], 6), 'j': ([4, 2, 4, 4, 4, 4, 4, 5, 4, 4, 6, 4, 4, 7, 4, 4, 8, 4, 4, 9, 4, 2, 10, 4, 3, 10, 4], 5), 'n': ([1, 4, 4, 3, 4, 4, 4, 4, 4, 1, 5, 4, 2, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 1, 8, 4, 5, 8, 4, 0], 7), 'r': ([1, 4, 4, 3, 4, 4, 4, 4, 4, 1, 5, 4, 2, 5, 4, 5, 5, 4, 1, 6, 4, 1, 7, 4, 1, 8, 4], 7), 'v': ([2, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 3, 6, 4, 5, 6, 4, 3, 7, 4, 5, 7, 4, 4, 8, 4], 7), 'z': ([2, 4, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 6, 4, 4, 5, 5, 4, 4, 6, 4, 3, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 6, 8, 4], 7), '!': ([2, 2, 4, 2, 3, 4, 2, 4, 4, 2, 5, 4, 2, 6, 4, 2, 8, 4, 0], 3), '%': ([3, 2, 4, 8, 2, 4, 2, 3, 4, 4, 3, 4, 7, 3, 4, 3, 4, 4, 6, 4, 4, 5, 5, 4, 4, 6, 4, 8, 6, 4, 3, 7, 4, 7, 7, 4, 9, 7, 4, 2, 8, 4, 8, 8, 4], 10), ')': ([2, 2, 4, 3, 3, 4, 3, 4, 4, 3, 5, 4, 3, 6, 4, 3, 7, 4, 2, 8, 4], 4), '-': ([2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 0], 6), '1': ([3, 2, 4, 2, 3, 4, 3, 3, 4, 3, 4, 4, 3, 5, 4, 3, 6, 4, 3, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 0], 5), '5': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 6, 2, 4, 2, 3, 4, 2, 4, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), '9': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 5, 4, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 5, 5, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4], 7), '=': ([2, 3, 4, 3, 3, 4, 4, 3, 4, 5, 3, 4, 6, 3, 4, 2, 6, 4, 3, 6, 4, 4, 6, 4, 5, 6, 4, 6, 6, 4, 0], 7), 'A': ([1, 2, 4, 2, 2, 4, 3, 2, 4, 0, 3, 4, 4, 3, 4, 0, 4, 4, 4, 4, 4, 0, 5, 4, 1, 5, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 0, 6, 4, 4, 6, 4, 0, 7, 4, 4, 7, 4, 0, 8, 4, 4, 8, 4, 0], 7), 'E': ([1, 2, 4, 2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 1, 3, 4, 1, 4, 4, 1, 5, 4, 2, 5, 4, 3, 5, 4, 4, 5, 4, 1, 6, 4, 1, 7, 4, 1, 8, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 0], 7), 'I': ([2, 2, 4, 3, 2, 4, 4, 2, 4, 3, 3, 4, 3, 4, 4, 3, 5, 4, 3, 6, 4, 3, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4], 5), 'M': ([1, 2, 4, 5, 2, 4, 1, 3, 4, 2, 3, 4, 4, 3, 4, 5, 3, 4, 1, 4, 4, 3, 4, 4, 5, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 1, 8, 4, 5, 8, 4], 7), 'Q': ([3, 2, 4, 4, 2, 4, 5, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 5, 9, 4, 6, 9, 4, 0], 7), 'U': ([2, 2, 4, 6, 2, 4, 2, 3, 4, 6, 3, 4, 2, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), 'Y': ([1, 2, 4, 5, 2, 4, 1, 3, 4, 5, 3, 4, 1, 4, 4, 5, 4, 4, 2, 5, 4, 4, 5, 4, 3, 6, 4, 3, 7, 4, 3, 8, 4], 7), ']': ([2, 2, 4, 3, 2, 4, 3, 3, 4, 3, 4, 4, 3, 5, 4, 3, 6, 4, 3, 7, 4, 2, 8, 4, 3, 8, 4], 4), 'a': ([3, 4, 4, 4, 4, 4, 5, 4, 4, 6, 5, 4, 3, 6, 4, 4, 6, 4, 5, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 6, 8, 4, 0], 7), 'e': ([2, 4, 4, 3, 4, 4, 4, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 2, 6, 4, 3, 6, 4, 4, 6, 4, 5, 6, 4, 1, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4], 7), 'i': ([1, 2, 4, 1, 4, 4, 1, 5, 4, 1, 6, 4, 1, 7, 4, 1, 8, 4, 0], 3), 'm': ([1, 4, 4, 2, 4, 4, 3, 4, 4, 4, 4, 4, 1, 5, 4, 3, 5, 4, 5, 5, 4, 1, 6, 4, 3, 6, 4, 5, 6, 4, 1, 7, 4, 3, 7, 4, 5, 7, 4, 1, 8, 4, 3, 8, 4, 5, 8, 4, 0], 7), 'q': ([2, 4, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 5, 9, 4, 5, 10, 4, 5, 11, 4], 7), 'u': ([1, 4, 4, 5, 4, 4, 1, 5, 4, 5, 5, 4, 1, 6, 4, 5, 6, 4, 1, 7, 4, 4, 7, 4, 5, 7, 4, 2, 8, 4, 3, 8, 4, 5, 8, 4, 0], 7), 'y': ([2, 4, 4, 6, 4, 4, 2, 5, 4, 6, 5, 4, 2, 6, 4, 6, 6, 4, 2, 7, 4, 6, 7, 4, 3, 8, 4, 4, 8, 4, 5, 8, 4, 6, 8, 4, 6, 9, 4, 6, 10, 4, 3, 11, 4, 4, 11, 4, 5, 11, 4], 7), '}': ([1, 2, 4, 2, 3, 4, 2, 4, 4, 3, 5, 4, 2, 6, 4, 2, 7, 4, 1, 8, 4], 5)}

def SnakeReader(let):
	g.new("")
	g.setrule("LifeHistory")
	cl = let2cells[let][0]
	g.putcells(cl)

	emptyline = True
	dir = 1
	
	rect = g.getrect()
	
	y0 = 0
	h = rect[1]  + rect[3] + 2
	l = rect[0] + rect[2] + 3
	x0 = rect[0] - 1
	y = y0
	x = x0 
	code = "" 
	
	while True: 
		y += dir 
		
		if y < y0:
			
			if emptyline == True:
				code += "Y+;"
				break 
				
			dir = 1
			y += dir
			code += "Y+;"
			x += 1
			emptyline = True 
			
		elif y >= y0 + h:
			dir = -1
			y += dir 
			code += "Y+;"
			x += 1
			emptyline = True
		else: 
			if dir == -1:
				code += "X-;"
			else: 
				code += "X+;"

		if g.getcell(x, y) != 0:
			code += "SET;"
			emptyline = False
			
		if x >= x0 + l:
			break 
		
		
	for i in range(h):		
		code = code.replace("X+;Y+;X-;", "Y+;")
		code = code.replace("X-;Y+;X+;", "Y+;")
	
	return code 

allkeys = "0123456789 TNGabcdefghijklmnopqrstuvwxyz.,"
keyd = {}

T6s = ""
idx = 0 

for k in allkeys:
	keyd[k] = idx
	idx += 1
	
	if k == ' ':
		
		T6s += "100"
		T6s += "100"
		T6s += "100"
		T6s += "100"
		T6s += "100"
		T6s += "100"
		T6s += "00"
		continue 
		
	cmd = SnakeReader(k)

	cmd = cmd.split(";")

	for i in cmd:
		if i == "SET":
			T6s += "111"
		if i == "X+":
			T6s += "010"
		if i == "X-":
			T6s += "011"
		if i == "Y+":
			T6s += "100"
		if i == "Y-":
			T6s += "101"
		
	T6s += "00"

program = {}

sentence1 = "bottles of beer on the wall, "
sentence2 = "bottles of beer."
sentence3 = "Take one down and pass it around, "
sentence4 = "bottles of beer on the wall."

sentence5 = "bottle of beer on the wall."
sentence6 = "1 bottle of beer on the wall, 1 bottle of beer."

sentence7 = "Take one down and pass it around, no more bottles of beer on the wall."
sentence8 = "No more bottles of beer on the wall, no more bottles of beer."
sentence9 = "Go to the store and buy some more, 99 bottles of beer on the wall."

def sentcode(sent):
	R7s = ""
	for i in sent:
		j = keyd[i]
		
		for i in range(j):
			R7s += "1"
		
		R7s += "01"
		
	R7s = R7s[:-1]
	R7s += "0"
	
	return R7s
	
R7s = sentcode(sentence1) + sentcode(sentence2) + sentcode(sentence3) + sentcode(sentence4)+ sentcode(sentence5)+ sentcode(sentence6)+ sentcode(sentence7)+ sentcode(sentence8)+ sentcode(sentence9)
registers = {"T6":[0,T6s], "T7":[0,R7s]}
g.setclipstr(str(registers))

